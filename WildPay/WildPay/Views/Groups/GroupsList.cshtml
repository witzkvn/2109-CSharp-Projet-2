@using WildPay.Models
@model Dictionary<Group, int>

@{
    if (Session["Id"] == null)
    {
        Response.Redirect("~/Home/Index");
    }
    int sessionGroupId = (int)Session["group"];
}

<div class="groupes">
    <h2>Liste des groupes</h2>
    <a class="button" href="@Url.Action("GroupCreation", "Groups")"><ion-icon name="add-circle"></ion-icon> Créer un groupe</a>

        @{if (ViewBag.Confirm != null)
            {
            <p class="message success">
                @ViewBag.Confirm
            </p>
            }
            else if (ViewBag.Error != null)
            {
            <p class="message error">
                @ViewBag.Error
            </p>
                } 
            }
    <div class="groupes-list">



        @foreach (KeyValuePair<Group, int> kvp in Model)
        {
            <a href="@Url.Action("GroupEdit", "Groups", new { groupId = kvp.Key.Id })" class="box">
                <div class="text-no-overflow">
                    <h3>@Utilities.GetPremiereLettreMajuscule(kvp.Key.Name)</h3>
                </div>
                <p>@kvp.Value membre(s) dans le groupe</p>
                <pc class="groupe-date">Groupe créé le @FormatTools.ConvertInShortDate(kvp.Key.CreatedAt)</pc>
            </a>

            if (sessionGroupId == kvp.Key.Id)
            {
                <div class="btn btn-transparent">
                    Choisi
                    <ion-icon name="checkmark-circle"></ion-icon>
                </div>
            }
            else
            {
                <a href="@Url.Action("ChangeGroup","Groups",new { groupId = kvp.Key.Id })" class="btn btn-primary">
                    Choisir
                </a>
            }
        }
    </div>

</div>
