@using WildPay.Models
@using WildPay.Tools

@model Category
@{
    if (Session["Id"] == null)
    {
        Response.Redirect("~/Connexion/Index");
    }
}

<div class="categories">
    <h2>Catégories des dépenses du groupe</h2>



    <div class="categories-wrapper box">
        @using (Html.BeginForm())
        {
            <h3>Créer une nouvelle catégorie</h3>

            <div class="form-group">
                @Html.LabelFor(Model => Model.Name)
                <input type="text" id="name" class="form-control"
                       minlength="2" maxlength="20" name="Name"
                       pattern="^[0-9A-Za-zàèìòùÀÈÌÒÙáéíóúýÁÉÍÓÚÝâêîôûÂÊÎÔÛãñõÃÑÕäëïöüÿÄËÏÖÜŸçÇßØøÅåÆæœ][0-9a-z A-ZàèìòùÀÈÌÒÙáéíóúýÁÉÍÓÚÝâêîôûÂÊÎÔÛãñõÃÑÕäëïöüÿÄËÏÖÜŸçÇßØøÅåÆæœ\\ \\-]*[0-9A-Za-zàèìòùÀÈÌÒÙáéíóúýÁÉÍÓÚÝâêîôûÂÊÎÔÛãñõÃÑÕäëïöüÿÄËÏÖÜŸçÇßØøÅåÆæœ]$"
                       required />         
                <input class="btn btn-primary" type="submit" value="Valider" />

                @if (ViewBag.Confirm != "")
                {
                    <p class="message success">
                        @Html.ValidationMessageFor(Model => Model.Name)
                        @ViewBag.Confirm
                    </p>
                }
                else if (ViewBag.Error != "")
                {
                    <p class="message error">
                        @Html.ValidationMessageFor(Model => Model.Name)
                        @ViewBag.Error
                    </p>
                }
            </div>
            @Html.ValidationSummary(true)
        }

        <h4>Catégories existantes :</h4>
        <p class="error warning">ATTENTION : la suppression d'une catégorie est définitive et les catégories des dépenses associées devront être à nouveau saisies manuellement.</p>

        <div class="categories-list">

            @{
                List<Category> categories = ViewBag.listeCategories;
                foreach (Category cat in categories)
                {
                    <div class="categorie-name">
                        @if (cat.IsBase == false)
                        {
                            <a class="categories-delete" href='@Url.Action("DeleteCategorie", "Categories", new { categorieIDToDelete = cat.Id})'>
                                <ion-icon name="trash"></ion-icon>
                            </a>
                        }
                        else
                        {
                            <div class="categories-delete disabled">
                                <ion-icon name="trash"></ion-icon>
                            </div>
                        }
                        <p class="text-no-overflow">@Utilities.GetPremiereLettreMajuscule(cat.Name)</p>
                    </div>

                }
            }

        </div>


    </div>

</div>


@if (ViewBag.categoryASupprimer != null)
{
    Category catASupp = ViewBag.categoryASupprimer;
    @Html.Partial("_DeleteConfirmation", catASupp);
}