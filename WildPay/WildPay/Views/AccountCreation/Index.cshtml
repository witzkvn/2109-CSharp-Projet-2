@model WildPay.Models.User

@{
    if (Session["Id"] != null)
    {
        Response.Redirect("~/Expense/Index");
    }
}


<div class="login-page">
    <h2>Bienvenue sur WildPay !</h2>

        <div class="box login-wrapper">
    @using (Html.BeginForm())
    {
        @Html.ValidationSummary(true)

            <h3>Créer un nouveau compte</h3>

            <div class="form-group">
                @Html.LabelFor(Model => Model.Firstname)
                <input type="text" id="firstnameInput" class="input-validation-error form-control"  data-val="true" 
                       pattern="^[A-Za-zàèìòùÀÈÌÒÙáéíóúýÁÉÍÓÚÝâêîôûÂÊÎÔÛãñõÃÑÕäëïöüÿÄËÏÖÜŸçÇßØøÅåÆæœ][a-z A-ZàèìòùÀÈÌÒÙáéíóúýÁÉÍÓÚÝâêîôûÂÊÎÔÛãñõÃÑÕäëïöüÿÄËÏÖÜŸçÇßØøÅåÆæœ\\ \\-]*[A-Za-zàèìòùÀÈÌÒÙáéíóúýÁÉÍÓÚÝâêîôûÂÊÎÔÛãñõÃÑÕäëïöüÿÄËÏÖÜŸçÇßØøÅåÆæœ]$"
                       minlength="2" maxlength="20" name="Firstname"
                       required />
                <p class="error">
                    @Html.ValidationMessageFor(Model => Model.Firstname)
                </p>
            </div>

            <div class="form-group">
                @Html.LabelFor(Model => Model.Lastname)
                <input type="text" id="lastnameInput" class="input-validation-error form-control"  data-val="true" 
                       pattern="^[A-Za-zàèìòùÀÈÌÒÙáéíóúýÁÉÍÓÚÝâêîôûÂÊÎÔÛãñõÃÑÕäëïöüÿÄËÏÖÜŸçÇßØøÅåÆæœ][a-z A-ZàèìòùÀÈÌÒÙáéíóúýÁÉÍÓÚÝâêîôûÂÊÎÔÛãñõÃÑÕäëïöüÿÄËÏÖÜŸçÇßØøÅåÆæœ\\ \\-]*[A-Za-zàèìòùÀÈÌÒÙáéíóúýÁÉÍÓÚÝâêîôûÂÊÎÔÛãñõÃÑÕäëïöüÿÄËÏÖÜŸçÇßØøÅåÆæœ]$" 
                       minlength="2" maxlength="20" name="Lastname" 
                       required/>
                <p class="error">
                    @Html.ValidationMessageFor(Model => Model.Lastname)
                </p>
            </div>


            <div class="form-group">
                @Html.LabelFor(Model => Model.Email)
                @Html.EditorFor(Model => Model.Email)
                <p class="error">
                    @Html.ValidationMessageFor(Model => Model.Email)
                </p>
            </div>

            <div class="form-group">
                @Html.LabelFor(Model => Model.Password)

                <input class="input-validation-error form-control" data-val="true" data-val-required="Le mot de passe est obligatoire" 
                       id="passwordInput" maxlength="30" minlength="5" name="Password" pattern="(?=.*\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[^A-Za-z0-9]).{5,}" type="password" value="" required>

                <p class="error">
                    @Html.ValidationMessageFor(Model => Model.Password)
                </p>


            </div>

            <p class="error">
                @ViewBag.Message
            </p>

            <button class="btn btn-primary" type="submit">
                Inscription
            </button>
            <a href="@Url.Action("Index", "Connexion")">Déjà un compte ? Connexion</a>

    }

        </div>

</div>

<script>
    var passwordInput = document.getElementById('passwordInput');
    passwordInput.oninvalid = function (event)
    {
        event.target.setCustomValidity('Utilisez au moins cinq caractères avec des majuscules, minuscules, des chiffres et des symboles.');
    }
    var firstnameInput = document.getElementById('firstNameInput');
    firstnameInput.oninvalid = function (event)
    {
        event.target.setCustomValidity('Le prénom doit faire au moins deux caractères.')
    }
    var lastnameInput = document.getElementById('lastNameInput');
    lastnameInput.oninvalid = function (event)
    {
        event.target.setCustomValidity('Le nom doit faire au moins deux caractères.')
    }
</script>